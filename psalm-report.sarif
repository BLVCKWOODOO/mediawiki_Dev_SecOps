{"version":"2.1.0","$schema":"https:\/\/json.schemastore.org\/sarif-2.1.0.json","runs":[{"tool":{"driver":{"name":"Psalm","informationUri":"https:\/\/psalm.dev","version":"6.7.0@11a32693fb9e33d4f0505de17af41c8fcac698a7","rules":[{"id":"106","name":"UnresolvableInclude","shortDescription":{"text":"UnresolvableInclude"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/106","help":{"markdown":"# UnresolvableInclude\n\nEmitted when Psalm cannot figure out what specific file is being included\/required by PHP.\n\n```php\n<?php\n\nfunction requireFile(string $s) : void {\n    require_once $s;\n}\n```\n","text":"# UnresolvableInclude\n\nEmitted when Psalm cannot figure out what specific file is being included\/required by PHP.\n\n```php\n<?php\n\nfunction requireFile(string $s) : void {\n    require_once $s;\n}\n```\n"}},{"id":"162","name":"PossiblyFalseOperand","shortDescription":{"text":"PossiblyFalseOperand"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/162","help":{"markdown":"# PossiblyFalseOperand\n\nEmitted when using a possibly `false` value as part of an operation (e.g. `+`, `.`, `^` etc).\n\n```php\n<?php\n\nfunction echoCommaPosition(string $str) : void {\n    echo 'The comma is located at ' . strpos($str, ','); \n}\n```\n\n## How to fix\n\nYou can detect the `false` value with some extra logic:\n\n```php\n<?php\n\nfunction echoCommaPosition(string $str) : void {\n    $pos = strpos($str, ',');\n\n    if ($pos === false) {\n        echo 'There is no comma in the string';\n    }\n\n    echo 'The comma is located at ' . $pos; \n}\n```\n\nAlternatively you can just use a ternary to suppress this issue:\n\n```php\n<?php\n\nfunction echoCommaPosition(string $str) : void {\n    echo 'The comma is located at ' . (strpos($str, ',') ?: ''); \n}\n```\n","text":"# PossiblyFalseOperand\n\nEmitted when using a possibly `false` value as part of an operation (e.g. `+`, `.`, `^` etc).\n\n```php\n<?php\n\nfunction echoCommaPosition(string $str) : void {\n    echo 'The comma is located at ' . strpos($str, ','); \n}\n```\n\n## How to fix\n\nYou can detect the `false` value with some extra logic:\n\n```php\n<?php\n\nfunction echoCommaPosition(string $str) : void {\n    $pos = strpos($str, ',');\n\n    if ($pos === false) {\n        echo 'There is no comma in the string';\n    }\n\n    echo 'The comma is located at ' . $pos; \n}\n```\n\nAlternatively you can just use a ternary to suppress this issue:\n\n```php\n<?php\n\nfunction echoCommaPosition(string $str) : void {\n    echo 'The comma is located at ' . (strpos($str, ',') ?: ''); \n}\n```\n"}},{"id":"361","name":"ClassMustBeFinal","shortDescription":{"text":"ClassMustBeFinal"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/361","help":{"markdown":"# ClassMustBeFinal\n\nEmitted when a non-final, non-abstract class with no child classes is found.  \n\n```php\n<?php\n\nclass A {}\n```\n\n## Why this is bad\n\nNon-final classes are bad for multiple reasons:\n\n- They allow overriding non-final methods and properties, which can lead to unexpected behavior and bugs if implementation details are changed during inheritance of classes not explicitly part of the public API (marked using the `@api` attribute).  \n- A corollary of the above is that non-final classes increase the amount of code that must be covered by any backwards-compatibility promise.  \n  - In final classes, only public functions\/properties\/constants must be covered by the backwards compatibility promise.  \n  - In non-final classes, all private, protected and public functions\/properties\/constants must be covered by the backwards compatibility promise (private methods too, because changes to their code may not be compatible with overridden protected\/public methods).\n- They are not optimized by Opcache and PHP itself, and thus are more expensive to use at runtime.  \n- Psalm type inference is more complex and not as exact for non-`final` classes.  \n\nIn general, the number of non-final classes in the codebase should be reduced as much as possible, both to speed up code execution and avoid unexpected bugs.  \n\n## How to fix\n\nRecommended, make the class `final`:    \n\n```php\n<?php\n\nfinal class A {}\n```\n\nThe above can also be automated using `vendor\/bin\/psalm --alter --issues=ClassMustBeFinal`.  \n\nIf inheritance should still be allowed, reduce the surface covered by the backwards compatibility promise by making the class abstract (containing **only** the logic that should be overridable), and move any non-overridable logic to a new `A` class:\n\n```php\n<?php\n\nabstract class A {}\n\nfinal class NewA extends A {}\n```\n\n**Note**: if non-`final` classes are needed for mocking in unit tests, simply use [dg\/bypass-finals](https:\/\/packagist.org\/packages\/dg\/bypass-finals) in your unit tests to allow mocking `final` classes.  \n\nAn alternative, not recommended for the [above reasons](#why-this-is-bad), is to make the class part of the public API of your library with `@api`.  ","text":"# ClassMustBeFinal\n\nEmitted when a non-final, non-abstract class with no child classes is found.  \n\n```php\n<?php\n\nclass A {}\n```\n\n## Why this is bad\n\nNon-final classes are bad for multiple reasons:\n\n- They allow overriding non-final methods and properties, which can lead to unexpected behavior and bugs if implementation details are changed during inheritance of classes not explicitly part of the public API (marked using the `@api` attribute).  \n- A corollary of the above is that non-final classes increase the amount of code that must be covered by any backwards-compatibility promise.  \n  - In final classes, only public functions\/properties\/constants must be covered by the backwards compatibility promise.  \n  - In non-final classes, all private, protected and public functions\/properties\/constants must be covered by the backwards compatibility promise (private methods too, because changes to their code may not be compatible with overridden protected\/public methods).\n- They are not optimized by Opcache and PHP itself, and thus are more expensive to use at runtime.  \n- Psalm type inference is more complex and not as exact for non-`final` classes.  \n\nIn general, the number of non-final classes in the codebase should be reduced as much as possible, both to speed up code execution and avoid unexpected bugs.  \n\n## How to fix\n\nRecommended, make the class `final`:    \n\n```php\n<?php\n\nfinal class A {}\n```\n\nThe above can also be automated using `vendor\/bin\/psalm --alter --issues=ClassMustBeFinal`.  \n\nIf inheritance should still be allowed, reduce the surface covered by the backwards compatibility promise by making the class abstract (containing **only** the logic that should be overridable), and move any non-overridable logic to a new `A` class:\n\n```php\n<?php\n\nabstract class A {}\n\nfinal class NewA extends A {}\n```\n\n**Note**: if non-`final` classes are needed for mocking in unit tests, simply use [dg\/bypass-finals](https:\/\/packagist.org\/packages\/dg\/bypass-finals) in your unit tests to allow mocking `final` classes.  \n\nAn alternative, not recommended for the [above reasons](#why-this-is-bad), is to make the class part of the public API of your library with `@api`.  "}},{"id":"19","name":"UndefinedClass","shortDescription":{"text":"UndefinedClass"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/019","help":{"markdown":"# UndefinedClass\n\nEmitted when referencing a class that does not exist\n\n```php\n<?php\n\n$a = new A();\n```\n\nIs also emitted when using extension classes not added to the `composer.json` requirements or to the [enableExtensions](https:\/\/psalm.dev\/docs\/running_psalm\/configuration\/#enableextensions) config key.  ","text":"# UndefinedClass\n\nEmitted when referencing a class that does not exist\n\n```php\n<?php\n\n$a = new A();\n```\n\nIs also emitted when using extension classes not added to the `composer.json` requirements or to the [enableExtensions](https:\/\/psalm.dev\/docs\/running_psalm\/configuration\/#enableextensions) config key.  "}},{"id":"150","name":"UnusedProperty","shortDescription":{"text":"UnusedProperty"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/150","help":{"markdown":"# UnusedProperty\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a\nprivate property.\n\nProperties used in constructor only are considered unused. Use normal variables instead.\n\nIf this property is used and part of the public API, annotate the containing\nclass with `@psalm-api`.\n\n```php\n<?php\n\nclass A {\n    \/** @var string|null *\/\n    private $foo;\n\n    \/** @var int|null *\/\n    private $bar;\n\n    public function getFoo(): ?string {\n        return $this->foo;\n    }\n}\n\n$a = new A();\necho $a->getFoo();\n```\n","text":"# UnusedProperty\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a\nprivate property.\n\nProperties used in constructor only are considered unused. Use normal variables instead.\n\nIf this property is used and part of the public API, annotate the containing\nclass with `@psalm-api`.\n\n```php\n<?php\n\nclass A {\n    \/** @var string|null *\/\n    private $foo;\n\n    \/** @var int|null *\/\n    private $bar;\n\n    public function getFoo(): ?string {\n        return $this->foo;\n    }\n}\n\n$a = new A();\necho $a->getFoo();\n```\n"}},{"id":"87","name":"PossiblyUnusedMethod","shortDescription":{"text":"PossiblyUnusedMethod"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/087","help":{"markdown":"# PossiblyUnusedMethod\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any calls to\na public or protected method.\n\nIf this method is used and part of the public API, annotate the containing class\nwith `@psalm-api`.\n\n```php\n<?php\n\nclass A {\n    public function foo() : void {}\n    public function bar() : void {}\n}\n(new A)->foo();\n```\n","text":"# PossiblyUnusedMethod\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any calls to\na public or protected method.\n\nIf this method is used and part of the public API, annotate the containing class\nwith `@psalm-api`.\n\n```php\n<?php\n\nclass A {\n    public function foo() : void {}\n    public function bar() : void {}\n}\n(new A)->foo();\n```\n"}},{"id":"134","name":"PossiblyUnusedParam","shortDescription":{"text":"PossiblyUnusedParam"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/134","help":{"markdown":"# PossiblyUnusedParam\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a particular parameter in a public\/protected method\n\n```php\n<?php\n\nclass A {\n    public function foo(int $a, int $b) : int {\n        return $a + 4;\n    }\n}\n\n$a = new A();\necho $a->foo(1, 2);\n```\n\nCan be suppressed by prefixing the parameter name with an underscore:\n\n```php\n<?php\nclass A {\n    public function foo(int $a, int $_b) : int {\n        return $a + 4;\n    }\n}\n```\n","text":"# PossiblyUnusedParam\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a particular parameter in a public\/protected method\n\n```php\n<?php\n\nclass A {\n    public function foo(int $a, int $b) : int {\n        return $a + 4;\n    }\n}\n\n$a = new A();\necho $a->foo(1, 2);\n```\n\nCan be suppressed by prefixing the parameter name with an underscore:\n\n```php\n<?php\nclass A {\n    public function foo(int $a, int $_b) : int {\n        return $a + 4;\n    }\n}\n```\n"}},{"id":"76","name":"UnusedMethod","shortDescription":{"text":"UnusedMethod"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/076","help":{"markdown":"# UnusedMethod\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a\ngiven private method or function.\n\nIf this method is used and part of the public API, annotate the containing class\nwith `@psalm-api`.\n\n```php\n<?php\n\nclass A {\n    public function __construct() {\n        $this->foo();\n    }\n    private function foo() : void {}\n    private function bar() : void {}\n}\n$a = new A();\n```\n","text":"# UnusedMethod\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a\ngiven private method or function.\n\nIf this method is used and part of the public API, annotate the containing class\nwith `@psalm-api`.\n\n```php\n<?php\n\nclass A {\n    public function __construct() {\n        $this->foo();\n    }\n    private function foo() : void {}\n    private function bar() : void {}\n}\n$a = new A();\n```\n"}},{"id":"75","name":"UnusedClass","shortDescription":{"text":"UnusedClass"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/075","help":{"markdown":"# UnusedClass\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a\ngiven class.\n\nIf this class is used and part of the public API, annotate it with `@psalm-api`.\n\n```php\n<?php\n\nfinal class A {}\nfinal class B {}\n$a = new A();\n```\n","text":"# UnusedClass\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a\ngiven class.\n\nIf this class is used and part of the public API, annotate it with `@psalm-api`.\n\n```php\n<?php\n\nfinal class A {}\nfinal class B {}\n$a = new A();\n```\n"}},{"id":"200","name":"UndefinedDocblockClass","shortDescription":{"text":"UndefinedDocblockClass"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/200","help":{"markdown":"# UndefinedDocblockClass\n\nEmitted when referencing a class that does not exist from a docblock\n\n```php\n<?php\n\n\/**\n * @param DoesNotExist $a\n *\/\nfunction foo($a) : void {}\n```\n","text":"# UndefinedDocblockClass\n\nEmitted when referencing a class that does not exist from a docblock\n\n```php\n<?php\n\n\/**\n * @param DoesNotExist $a\n *\/\nfunction foo($a) : void {}\n```\n"}},{"id":"50","name":"MissingReturnType","shortDescription":{"text":"MissingReturnType"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/050","help":{"markdown":"# MissingReturnType\n\nEmitted when a function doesn't have a return type defined\n\n```php\n<?php\n\nfunction foo() {\n    return \"foo\";\n}\n```\n\nCorrect with:\n\n```php\n<?php\n\nfunction foo() : string {\n    return \"foo\";\n}\n```\n","text":"# MissingReturnType\n\nEmitted when a function doesn't have a return type defined\n\n```php\n<?php\n\nfunction foo() {\n    return \"foo\";\n}\n```\n\nCorrect with:\n\n```php\n<?php\n\nfunction foo() : string {\n    return \"foo\";\n}\n```\n"}},{"id":"143","name":"InvalidFalsableReturnType","shortDescription":{"text":"InvalidFalsableReturnType"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/143","help":{"markdown":"# InvalidFalsableReturnType\n\nEmitted when a function can return a nullable value, but its given return type says otherwise\n\n```php\n<?php\n\nfunction foo() : string {\n    if (rand(0, 1)) {\n        return \"foo\";\n    }\n\n    return false;\n}\n```\n","text":"# InvalidFalsableReturnType\n\nEmitted when a function can return a nullable value, but its given return type says otherwise\n\n```php\n<?php\n\nfunction foo() : string {\n    if (rand(0, 1)) {\n        return \"foo\";\n    }\n\n    return false;\n}\n```\n"}},{"id":"137","name":"FalsableReturnStatement","shortDescription":{"text":"FalsableReturnStatement"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/137","help":{"markdown":"# FalsableReturnStatement\n\nEmitted if a return statement contains a false value, but the function return type does not allow false\n\n```php\n<?php\n\nfunction getCommaPosition(string $a) : int {\n    return strpos($a, ',');\n}\n```\n\n## How to fix\n\nYou can add a specific check for false:\n\n```php\n<?php\n\nfunction getCommaPosition(string $a) : int {\n    $pos = strpos($a, ',');\n\n    if ($pos === false) {\n        return -1;\n    }\n\n    return $pos;\n}\n```\n\nAlternatively you may choose to throw an exception:\n\n```php\n<?php\n\nfunction getCommaPosition(string $a) : int {\n    $pos = strpos($a, ',');\n\n    if ($pos === false) {\n        throw new Exception('This is unexpected');\n    }\n\n    return $pos;\n}\n```\n","text":"# FalsableReturnStatement\n\nEmitted if a return statement contains a false value, but the function return type does not allow false\n\n```php\n<?php\n\nfunction getCommaPosition(string $a) : int {\n    return strpos($a, ',');\n}\n```\n\n## How to fix\n\nYou can add a specific check for false:\n\n```php\n<?php\n\nfunction getCommaPosition(string $a) : int {\n    $pos = strpos($a, ',');\n\n    if ($pos === false) {\n        return -1;\n    }\n\n    return $pos;\n}\n```\n\nAlternatively you may choose to throw an exception:\n\n```php\n<?php\n\nfunction getCommaPosition(string $a) : int {\n    $pos = strpos($a, ',');\n\n    if ($pos === false) {\n        throw new Exception('This is unexpected');\n    }\n\n    return $pos;\n}\n```\n"}},{"id":"164","name":"PossiblyFalseIterator","shortDescription":{"text":"PossiblyFalseIterator"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/164","help":{"markdown":"# PossiblyFalseIterator\n\nEmitted when trying to iterate over a value that may be `false`\n\n```php\n<?php\n\n$arr = rand(0, 1) ? [1, 2, 3] : false;\nforeach ($arr as $a) {}\n```\n","text":"# PossiblyFalseIterator\n\nEmitted when trying to iterate over a value that may be `false`\n\n```php\n<?php\n\n$arr = rand(0, 1) ? [1, 2, 3] : false;\nforeach ($arr as $a) {}\n```\n"}},{"id":"58","name":"InvalidOperand","shortDescription":{"text":"InvalidOperand"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/058","help":{"markdown":"# InvalidOperand\n\nEmitted when using something as an operand that is unexpected\n\n```php\n<?php\n\nclass A {}\necho (new A) . ' ';\n```\n","text":"# InvalidOperand\n\nEmitted when using something as an operand that is unexpected\n\n```php\n<?php\n\nclass A {}\necho (new A) . ' ';\n```\n"}},{"id":"83","name":"PossiblyNullReference","shortDescription":{"text":"PossiblyNullReference"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/083","help":{"markdown":"# PossiblyNullReference\n\nEmitted when trying to call a method on a possibly null value\n\n```php\n<?php\n\nclass A {\n    public function bar() : void {}\n}\nfunction foo(?A $a) : void {\n    $a->bar();\n}\n```\n","text":"# PossiblyNullReference\n\nEmitted when trying to call a method on a possibly null value\n\n```php\n<?php\n\nclass A {\n    public function bar() : void {}\n}\nfunction foo(?A $a) : void {\n    $a->bar();\n}\n```\n"}},{"id":"356","name":"RiskyTruthyFalsyComparison","shortDescription":{"text":"RiskyTruthyFalsyComparison"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/356","help":{"markdown":"# RiskyTruthyFalsyComparison\n\nEmitted when comparing a value with multiple types, where at least one type can be only truthy or falsy and other types can contain both truthy and falsy values.\n\n```php\n<?php\n\n\/**\n * @param array|null $arg\n * @return void\n *\/\nfunction foo($arg) {\n    if ($arg) {\n        \/\/ this is risky, bc the empty array and null case are handled together\n    }\n    \n    if (!$arg) {\n        \/\/ this is risky, bc the empty array and null case are handled together  \n    }\n}\n```\n\n## Why this is bad\n\nThe truthy\/falsy type of a variable is often forgotten and not handled explicitly causing hard to track down errors.\n\n## How to fix\n\nExplicitly validate the variable with strict comparison.\n","text":"# RiskyTruthyFalsyComparison\n\nEmitted when comparing a value with multiple types, where at least one type can be only truthy or falsy and other types can contain both truthy and falsy values.\n\n```php\n<?php\n\n\/**\n * @param array|null $arg\n * @return void\n *\/\nfunction foo($arg) {\n    if ($arg) {\n        \/\/ this is risky, bc the empty array and null case are handled together\n    }\n    \n    if (!$arg) {\n        \/\/ this is risky, bc the empty array and null case are handled together  \n    }\n}\n```\n\n## Why this is bad\n\nThe truthy\/falsy type of a variable is often forgotten and not handled explicitly causing hard to track down errors.\n\n## How to fix\n\nExplicitly validate the variable with strict comparison.\n"}},{"id":"68","name":"MissingClosureReturnType","shortDescription":{"text":"MissingClosureReturnType"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/068","help":{"markdown":"# MissingClosureReturnType\n\nEmitted when a closure lacks a return type\n\n```php\n<?php\n\n$a = function() {\n    return \"foo\";\n};\n```\n","text":"# MissingClosureReturnType\n\nEmitted when a closure lacks a return type\n\n```php\n<?php\n\n$a = function() {\n    return \"foo\";\n};\n```\n"}},{"id":"73","name":"MissingConstructor","shortDescription":{"text":"MissingConstructor"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/073","help":{"markdown":"# MissingConstructor\n\nUninitialized properties are statically hard to analyze. To prevent mistakes, Psalm will enforce that all properties should be initialized.\n\nIt does that through [PropertyNotSetInConstructor](.\/PropertyNotSetInConstructor.md) and this issue.\n\nPsalm will then assume every property in the codebase is initialized.\n\nDoing that allows it to report missing initializations as well as [RedundantPropertyInitializationCheck](.\/RedundantPropertyInitializationCheck.md)\n\nThis issue is emitted when non-null properties without default values are defined in a class without a `__construct` method\n\nIf your project relies on having uninitialized properties, it is advised to suppress this issue, as well as [PropertyNotSetInConstructor](.\/PropertyNotSetInConstructor.md) and [RedundantPropertyInitializationCheck](.\/RedundantPropertyInitializationCheck.md).\n\n```php\n<?php\n\nclass A {\n    \/** @var string *\/\n    public $foo;\n}\n```\n","text":"# MissingConstructor\n\nUninitialized properties are statically hard to analyze. To prevent mistakes, Psalm will enforce that all properties should be initialized.\n\nIt does that through [PropertyNotSetInConstructor](.\/PropertyNotSetInConstructor.md) and this issue.\n\nPsalm will then assume every property in the codebase is initialized.\n\nDoing that allows it to report missing initializations as well as [RedundantPropertyInitializationCheck](.\/RedundantPropertyInitializationCheck.md)\n\nThis issue is emitted when non-null properties without default values are defined in a class without a `__construct` method\n\nIf your project relies on having uninitialized properties, it is advised to suppress this issue, as well as [PropertyNotSetInConstructor](.\/PropertyNotSetInConstructor.md) and [RedundantPropertyInitializationCheck](.\/RedundantPropertyInitializationCheck.md).\n\n```php\n<?php\n\nclass A {\n    \/** @var string *\/\n    public $foo;\n}\n```\n"}},{"id":"80","name":"PossiblyNullOperand","shortDescription":{"text":"PossiblyNullOperand"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/080","help":{"markdown":"# PossiblyNullOperand\n\nEmitted when using a possibly `null` value as part of an operation (e.g. `+`, `.`, `^` etc.)\n\n```php\n<?php\n\nfunction foo(?int $a) : void {\n    echo $a + 5;\n}\n```\n","text":"# PossiblyNullOperand\n\nEmitted when using a possibly `null` value as part of an operation (e.g. `+`, `.`, `^` etc.)\n\n```php\n<?php\n\nfunction foo(?int $a) : void {\n    echo $a + 5;\n}\n```\n"}},{"id":"148","name":"PossiblyNullPropertyAssignmentValue","shortDescription":{"text":"PossiblyNullPropertyAssignmentValue"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/148","help":{"markdown":"# PossiblyNullPropertyAssignmentValue\n\nEmitted when trying to assign a value that may be null to a property that only takes non-null values.\n\n```php\n<?php\n\nclass A {\n    \/** @var string *\/\n    public $foo = \"bar\";\n}\n\nfunction assignToA(?string $s) {\n    $a = new A();\n    $a->foo = $s;\n}\n```\n","text":"# PossiblyNullPropertyAssignmentValue\n\nEmitted when trying to assign a value that may be null to a property that only takes non-null values.\n\n```php\n<?php\n\nclass A {\n    \/** @var string *\/\n    public $foo = \"bar\";\n}\n\nfunction assignToA(?string $s) {\n    $a = new A();\n    $a->foo = $s;\n}\n```\n"}},{"id":"182","name":"MissingTemplateParam","shortDescription":{"text":"MissingTemplateParam"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/182","help":{"markdown":"# MissingTemplateParam\n\nEmitted when using the `@extends`\/`@implements` annotation to extend a class without\nextending all its template params.\n\n```php\n<?php\n\n\/**\n * @template-implements ArrayAccess<int>\n *\/\nclass SomeIterator implements ArrayAccess\n{\n    public function offsetSet($offset, $value) {\n    }\n\n    public function offsetExists($offset) {\n        return false;\n    }\n\n    public function offsetUnset($offset) {\n    }\n\n    public function offsetGet($offset) {\n        return null;\n    }\n}\n```\n","text":"# MissingTemplateParam\n\nEmitted when using the `@extends`\/`@implements` annotation to extend a class without\nextending all its template params.\n\n```php\n<?php\n\n\/**\n * @template-implements ArrayAccess<int>\n *\/\nclass SomeIterator implements ArrayAccess\n{\n    public function offsetSet($offset, $value) {\n    }\n\n    public function offsetExists($offset) {\n        return false;\n    }\n\n    public function offsetUnset($offset) {\n    }\n\n    public function offsetGet($offset) {\n        return null;\n    }\n}\n```\n"}},{"id":"358","name":"MissingOverrideAttribute","shortDescription":{"text":"MissingOverrideAttribute"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/358","help":{"markdown":"# MissingOverrideAttribute\n\nEmitted when the config flag `ensureOverrideAttribute` is set to `true` and a method on a child class or interface overrides a method on a parent, but no `Override` attribute is present.\n\n```php\n<?php\n\nclass A {\n    function receive(): void\n    {\n    }\n}\n\nclass B extends A {\n    function receive(): void\n    {\n    }\n}\n```\n\n## Why this is bad\n\nHaving an `Override` attribute on overridden methods makes intentions clear. Read the [PHP RFC](https:\/\/wiki.php.net\/rfc\/marking_overriden_methods) for more details.\n","text":"# MissingOverrideAttribute\n\nEmitted when the config flag `ensureOverrideAttribute` is set to `true` and a method on a child class or interface overrides a method on a parent, but no `Override` attribute is present.\n\n```php\n<?php\n\nclass A {\n    function receive(): void\n    {\n    }\n}\n\nclass B extends A {\n    function receive(): void\n    {\n    }\n}\n```\n\n## Why this is bad\n\nHaving an `Override` attribute on overridden methods makes intentions clear. Read the [PHP RFC](https:\/\/wiki.php.net\/rfc\/marking_overriden_methods) for more details.\n"}},{"id":"104","name":"PossiblyFalseArgument","shortDescription":{"text":"PossiblyFalseArgument"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/104","help":{"markdown":"# PossiblyFalseArgument\n\nEmitted when a function argument is possibly `false`, but the function does not expect `false`. This is distinct from a function argument is possibly `bool`, which results in `PossiblyInvalidArgument`.\n\n```php\n<?php\n\nfunction foo(string $s) : void {\n    $a_pos = strpos($s, \"a\");\n    echo substr($s, $a_pos);\n}\n```\n","text":"# PossiblyFalseArgument\n\nEmitted when a function argument is possibly `false`, but the function does not expect `false`. This is distinct from a function argument is possibly `bool`, which results in `PossiblyInvalidArgument`.\n\n```php\n<?php\n\nfunction foo(string $s) : void {\n    $a_pos = strpos($s, \"a\");\n    echo substr($s, $a_pos);\n}\n```\n"}},{"id":"79","name":"PossiblyNullArrayAccess","shortDescription":{"text":"PossiblyNullArrayAccess"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/079","help":{"markdown":"# PossiblyNullArrayAccess\n\nEmitted when trying to access an array offset on a possibly null value\n\n```php\n<?php\n\nfunction foo(?array $a) : void {\n    echo $a[0];\n}\n```\n","text":"# PossiblyNullArrayAccess\n\nEmitted when trying to access an array offset on a possibly null value\n\n```php\n<?php\n\nfunction foo(?array $a) : void {\n    echo $a[0];\n}\n```\n"}},{"id":"92","name":"PossiblyInvalidArgument","shortDescription":{"text":"PossiblyInvalidArgument"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/092","help":{"markdown":"# PossiblyInvalidArgument\n\nEmitted when\n\n```php\n<?php\n\n\/** @return int|stdClass *\/\nfunction foo() {\n    return rand(0, 1) ? 5 : new stdClass;\n}\nfunction bar(int $i) : void {}\nbar(foo());\n```\n","text":"# PossiblyInvalidArgument\n\nEmitted when\n\n```php\n<?php\n\n\/** @return int|stdClass *\/\nfunction foo() {\n    return rand(0, 1) ? 5 : new stdClass;\n}\nfunction bar(int $i) : void {}\nbar(foo());\n```\n"}},{"id":"77","name":"UnusedVariable","shortDescription":{"text":"UnusedVariable"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/077","help":{"markdown":"# UnusedVariable\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any references to a variable, once instantiated\n\n```php\n<?php\n\nfunction foo() : void {\n    $a = 5;\n    $b = 4;\n    echo $b;\n}\n```\n\nCan be suppressed by prefixing the variable name with an underscore:\n\n```php\n<?php\n\n$_a = 22;\n```\n","text":"# UnusedVariable\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any references to a variable, once instantiated\n\n```php\n<?php\n\nfunction foo() : void {\n    $a = 5;\n    $b = 4;\n    echo $b;\n}\n```\n\nCan be suppressed by prefixing the variable name with an underscore:\n\n```php\n<?php\n\n$_a = 22;\n```\n"}},{"id":"4","name":"InvalidArgument","shortDescription":{"text":"InvalidArgument"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/004","help":{"markdown":"# InvalidArgument\n\nEmitted when a supplied function\/method argument is incompatible with the method signature or docblock one.\n\n```php\n<?php\n\nclass A {}\n\nfunction foo(A $a) : void {}\n\n\/**\n * @param string $s\n *\/\nfunction callFoo($s) : void {\n    foo($s);\n}\n```\n\n## Why it\u2019s bad\n\nCalling functions with incorrect values will cause a fatal error at runtime.\n\n## How to fix\n\nSometimes this message can just be the result of an incorrect docblock.\n\nYou can fix by correcting the docblock, or converting to a function signature:\n\n```php\n<?php\n\nclass A {}\n\nfunction foo(A $a) : void {}\n\nfunction callFoo(A $a) : void {\n    foo($a);\n}\n```\n","text":"# InvalidArgument\n\nEmitted when a supplied function\/method argument is incompatible with the method signature or docblock one.\n\n```php\n<?php\n\nclass A {}\n\nfunction foo(A $a) : void {}\n\n\/**\n * @param string $s\n *\/\nfunction callFoo($s) : void {\n    foo($s);\n}\n```\n\n## Why it\u2019s bad\n\nCalling functions with incorrect values will cause a fatal error at runtime.\n\n## How to fix\n\nSometimes this message can just be the result of an incorrect docblock.\n\nYou can fix by correcting the docblock, or converting to a function signature:\n\n```php\n<?php\n\nclass A {}\n\nfunction foo(A $a) : void {}\n\nfunction callFoo(A $a) : void {\n    foo($a);\n}\n```\n"}},{"id":"157","name":"MissingDependency","shortDescription":{"text":"MissingDependency"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/157","help":{"markdown":"# MissingDependency\n\nEmitted when referencing a class that does not exist\n\n```php\n<?php\n\n\/**\n * @psalm-suppress UndefinedClass\n *\/\nclass A extends B {}\n\n$a = new A();\n```\n","text":"# MissingDependency\n\nEmitted when referencing a class that does not exist\n\n```php\n<?php\n\n\/**\n * @psalm-suppress UndefinedClass\n *\/\nclass A extends B {}\n\n$a = new A();\n```\n"}},{"id":"272","name":"UnusedReturnValue","shortDescription":{"text":"UnusedReturnValue"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/272","help":{"markdown":"# UnusedReturnValue\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a private method\u2019s return value.\n\n```php\n<?php\n\nclass A {\n    public function __construct() {\n        $this->foo();\n    }\n    private function foo() : string {\n        return \"hello\";\n    }\n}\n\nnew A();\n```\n","text":"# UnusedReturnValue\n\nEmitted when `--find-dead-code` is turned on and Psalm cannot find any uses of a private method\u2019s return value.\n\n```php\n<?php\n\nclass A {\n    public function __construct() {\n        $this->foo();\n    }\n    private function foo() : string {\n        return \"hello\";\n    }\n}\n\nnew A();\n```\n"}},{"id":"268","name":"NamedArgumentNotAllowed","shortDescription":{"text":"NamedArgumentNotAllowed"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/268","help":{"markdown":"# NamedArgumentNotAllowed\n\nEmitted when a named argument is used when calling a function with `@no-named-arguments`.\n\n```php\n<?php\n\n\/** @no-named-arguments *\/\nfunction foo(int $a, int $b): int {\n\treturn $a + $b;\n}\n\nfoo(a: 0, b: 1);\n\n```\n\n## Why this is bad\n\nThe `@no-named-arguments` annotation indicates that argument names may be changed in the future, and an update may break backwards compatibility with function calls using named arguments.\n\n## How to fix\n\nAvoid using named arguments for functions annotated with `@no-named-arguments`.\n\n```php\n<?php\n\n\/** @no-named-arguments *\/\nfunction foo(int $a, int $b): int {\n\treturn $a + $b;\n}\n\nfoo(0, 1);\n\n```\n","text":"# NamedArgumentNotAllowed\n\nEmitted when a named argument is used when calling a function with `@no-named-arguments`.\n\n```php\n<?php\n\n\/** @no-named-arguments *\/\nfunction foo(int $a, int $b): int {\n\treturn $a + $b;\n}\n\nfoo(a: 0, b: 1);\n\n```\n\n## Why this is bad\n\nThe `@no-named-arguments` annotation indicates that argument names may be changed in the future, and an update may break backwards compatibility with function calls using named arguments.\n\n## How to fix\n\nAvoid using named arguments for functions annotated with `@no-named-arguments`.\n\n```php\n<?php\n\n\/** @no-named-arguments *\/\nfunction foo(int $a, int $b): int {\n\treturn $a + $b;\n}\n\nfoo(0, 1);\n\n```\n"}},{"id":"153","name":"MissingClosureParamType","shortDescription":{"text":"MissingClosureParamType"},"properties":{"tags":["maintainability"]},"helpUri":"https:\/\/psalm.dev\/153","help":{"markdown":"# MissingClosureParamType\n\nEmitted when a closure parameter has no type information associated with it\n\n```php\n<?php\n\n$a = function($a): string {\n    return \"foo\";\n};\n```\n","text":"# MissingClosureParamType\n\nEmitted when a closure parameter has no type information associated with it\n\n```php\n<?php\n\n$a = function($a): string {\n    return \"foo\";\n};\n```\n"}}]}},"results":[{"ruleId":"106","message":{"text":"Cannot resolve the given expression to a file path"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":18,"endLine":18,"startColumn":1,"endColumn":66}}}]},{"ruleId":"162","message":{"text":"Cannot concatenate with a possibly false false|string"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":18,"endLine":18,"startColumn":14,"endColumn":23}}}]},{"ruleId":"106","message":{"text":"Cannot resolve the given expression to a file path"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":19,"endLine":19,"startColumn":1,"endColumn":68}}}]},{"ruleId":"162","message":{"text":"Cannot concatenate with a possibly false false|string"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":19,"endLine":19,"startColumn":14,"endColumn":23}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\ComposerLaunchParallel is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":34,"endLine":34,"startColumn":7,"endColumn":29}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named MediaWiki\\Maintenance\\ForkController does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":34,"endLine":34,"startColumn":38,"endColumn":52}}}]},{"ruleId":"150","message":{"text":"Cannot find any references to private property MediaWiki\\Composer\\ComposerLaunchParallel::$splitGroupExecutor"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":36,"endLine":36,"startColumn":29,"endColumn":48}}}]},{"ruleId":"150","message":{"text":"Cannot find any references to private property MediaWiki\\Composer\\ComposerLaunchParallel::$composerSystemInterface"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":37,"endLine":37,"startColumn":34,"endColumn":58}}}]},{"ruleId":"150","message":{"text":"Cannot find any references to private property MediaWiki\\Composer\\ComposerLaunchParallel::$groups"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":44,"endLine":44,"startColumn":16,"endColumn":23}}}]},{"ruleId":"150","message":{"text":"Cannot find any references to private property MediaWiki\\Composer\\ComposerLaunchParallel::$excludeGroups"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":45,"endLine":45,"startColumn":16,"endColumn":30}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::__construct"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":51,"endLine":51,"startColumn":18,"endColumn":29}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":52,"endLine":52,"startColumn":10,"endColumn":28}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":53,"endLine":53,"startColumn":9,"endColumn":16}}}]},{"ruleId":"134","message":{"text":"Param #3 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":54,"endLine":54,"startColumn":9,"endColumn":23}}}]},{"ruleId":"134","message":{"text":"Param #4 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":55,"endLine":55,"startColumn":10,"endColumn":16}}}]},{"ruleId":"134","message":{"text":"Param #5 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":56,"endLine":56,"startColumn":23,"endColumn":42}}}]},{"ruleId":"134","message":{"text":"Param #6 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":57,"endLine":57,"startColumn":28,"endColumn":52}}}]},{"ruleId":"76","message":{"text":"Cannot find any calls to private method MediaWiki\\Composer\\ComposerLaunchParallel::isDatabaseRun"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":86,"endLine":86,"startColumn":19,"endColumn":32}}}]},{"ruleId":"76","message":{"text":"Cannot find any calls to private method MediaWiki\\Composer\\ComposerLaunchParallel::isDatabaseRunForGroups"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":90,"endLine":90,"startColumn":26,"endColumn":48}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::start"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":98,"endLine":98,"startColumn":18,"endColumn":23}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::prepareEnvironment"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":106,"endLine":106,"startColumn":21,"endColumn":39}}}]},{"ruleId":"76","message":{"text":"Cannot find any calls to private method MediaWiki\\Composer\\ComposerLaunchParallel::runTestSuite"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":111,"endLine":111,"startColumn":19,"endColumn":31}}}]},{"ruleId":"76","message":{"text":"Cannot find any calls to private method MediaWiki\\Composer\\ComposerLaunchParallel::extractArgs"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":139,"endLine":139,"startColumn":26,"endColumn":37}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::launchTests"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":165,"endLine":165,"startColumn":25,"endColumn":36}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":165,"endLine":165,"startColumn":44,"endColumn":50}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":165,"endLine":165,"startColumn":58,"endColumn":65}}}]},{"ruleId":"134","message":{"text":"Param #3 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":165,"endLine":165,"startColumn":73,"endColumn":87}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::launchTestsCustomGroups"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":194,"endLine":194,"startColumn":25,"endColumn":48}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":194,"endLine":194,"startColumn":56,"endColumn":62}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::getDatabaseExcludeGroups"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":209,"endLine":209,"startColumn":25,"endColumn":49}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::launchTestsDatabase"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":213,"endLine":213,"startColumn":25,"endColumn":44}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":213,"endLine":213,"startColumn":52,"endColumn":58}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::getDatabaselessExcludeGroups"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":221,"endLine":221,"startColumn":25,"endColumn":53}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::launchTestsDatabaseless"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":225,"endLine":225,"startColumn":25,"endColumn":48}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":225,"endLine":225,"startColumn":56,"endColumn":62}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerLaunchParallel::getSplitGroupCount"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerLaunchParallel.php"},"region":{"startLine":239,"endLine":239,"startColumn":25,"endColumn":43}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\ComposerPhpunitXmlCoverageEdit is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerPhpunitXmlCoverageEdit.php"},"region":{"startLine":35,"endLine":35,"startColumn":7,"endColumn":37}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\ComposerPhpunitXmlCoverageEdit is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerPhpunitXmlCoverageEdit.php"},"region":{"startLine":35,"endLine":35,"startColumn":7,"endColumn":37}}}]},{"ruleId":"200","message":{"text":"Docblock-defined class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerPhpunitXmlCoverageEdit.php"},"region":{"startLine":37,"endLine":37,"startColumn":12,"endColumn":17}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\ComposerPhpunitXmlCoverageEdit::onEvent does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerPhpunitXmlCoverageEdit.php"},"region":{"startLine":39,"endLine":39,"startColumn":25,"endColumn":32}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerPhpunitXmlCoverageEdit.php"},"region":{"startLine":39,"endLine":39,"startColumn":34,"endColumn":40}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\ComposerSystemInterface is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":13,"endLine":13,"startColumn":7,"endColumn":30}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\ComposerSystemInterface::print does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":15,"endLine":15,"startColumn":18,"endColumn":23}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\ComposerSystemInterface::exit does not have a return type, expecting never"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":19,"endLine":19,"startColumn":18,"endColumn":22}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerSystemInterface::exit"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":19,"endLine":19,"startColumn":18,"endColumn":22}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\ComposerSystemInterface::putFileContents does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":23,"endLine":23,"startColumn":18,"endColumn":33}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerSystemInterface::putFileContents"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":23,"endLine":23,"startColumn":18,"endColumn":33}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\ComposerSystemInterface::getcwd"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":27,"endLine":27,"startColumn":18,"endColumn":24}}}]},{"ruleId":"143","message":{"text":"The declared return type 'string' for MediaWiki\\Composer\\ComposerSystemInterface::getcwd does not allow false, but 'false|string' contains false"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":27,"endLine":27,"startColumn":28,"endColumn":34}}}]},{"ruleId":"137","message":{"text":"The declared return type 'string' for MediaWiki\\Composer\\ComposerSystemInterface::getcwd does not allow false, but the function returns 'false|string'"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerSystemInterface.php"},"region":{"startLine":28,"endLine":28,"startColumn":10,"endColumn":18}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\ComposerVendorHtaccessCreator is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerVendorHtaccessCreator.php"},"region":{"startLine":31,"endLine":31,"startColumn":7,"endColumn":36}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\ComposerVendorHtaccessCreator is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerVendorHtaccessCreator.php"},"region":{"startLine":31,"endLine":31,"startColumn":7,"endColumn":36}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\ComposerVendorHtaccessCreator::onEvent does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/ComposerVendorHtaccessCreator.php"},"region":{"startLine":36,"endLine":36,"startColumn":25,"endColumn":32}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\LockFileChecker is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":33,"endLine":33,"startColumn":7,"endColumn":22}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\LockFileChecker is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":33,"endLine":33,"startColumn":7,"endColumn":22}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Wikimedia\\Composer\\ComposerJson does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":34,"endLine":34,"startColumn":10,"endColumn":22}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Wikimedia\\Composer\\ComposerLock does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":35,"endLine":35,"startColumn":10,"endColumn":22}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Wikimedia\\Composer\\ComposerJson does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":37,"endLine":37,"startColumn":31,"endColumn":43}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":37,"endLine":37,"startColumn":44,"endColumn":57}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Wikimedia\\Composer\\ComposerLock does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":37,"endLine":37,"startColumn":59,"endColumn":71}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":37,"endLine":37,"startColumn":72,"endColumn":85}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Wikimedia\\Composer\\ComposerLock does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":50,"endLine":50,"startColumn":16,"endColumn":35}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Wikimedia\\Composer\\ComposerJson does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/LockFileChecker.php"},"region":{"startLine":51,"endLine":51,"startColumn":13,"endColumn":32}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\InvalidSplitGroupCountException is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/InvalidSplitGroupCountException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":38}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\InvalidSplitGroupCountException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/InvalidSplitGroupCountException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":38}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\MissingNamespaceMatchForTestException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/MissingNamespaceMatchForTestException.php"},"region":{"startLine":12,"endLine":12,"startColumn":7,"endColumn":44}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitConsoleOutputProcessingException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessingException.php"},"region":{"startLine":8,"endLine":8,"startColumn":7,"endColumn":46}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitConsoleOutputProcessor is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":12,"endLine":12,"startColumn":7,"endColumn":36}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitConsoleOutputProcessor is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":12,"endLine":12,"startColumn":7,"endColumn":36}}}]},{"ruleId":"164","message":{"text":"Cannot iterate over falsable var false|non-empty-list<string>"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":45,"endLine":45,"startColumn":13,"endColumn":19}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":98,"endLine":98,"startColumn":40,"endColumn":52}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitConsoleOutputProcessor::handleSummaryTotals does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":110,"endLine":110,"startColumn":19,"endColumn":38}}}]},{"ruleId":"83","message":{"text":"Cannot call method processLine on possibly null value"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":130,"endLine":130,"startColumn":32,"endColumn":43}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitConsoleOutputProcessor::handleDotChartLine does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":141,"endLine":141,"startColumn":19,"endColumn":37}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitConsoleOutputProcessor::handleTestSummary does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":166,"endLine":166,"startColumn":19,"endColumn":36}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":214,"endLine":214,"startColumn":62,"endColumn":74}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":214,"endLine":214,"startColumn":80,"endColumn":91}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":214,"endLine":214,"startColumn":93,"endColumn":104}}}]},{"ruleId":"134","message":{"text":"Param #3 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":214,"endLine":214,"startColumn":105,"endColumn":108}}}]},{"ruleId":"356","message":{"text":"Operand of type null|string contains type string, which can be falsy and truthy. This can cause possibly unexpected behavior. Use strict comparison instead."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":250,"endLine":250,"startColumn":8,"endColumn":26}}}]},{"ruleId":"356","message":{"text":"Operand of type null|string contains type string, which can be falsy and truthy. This can cause possibly unexpected behavior. Use strict comparison instead."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":263,"endLine":263,"startColumn":8,"endColumn":30}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int<1, max>"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":312,"endLine":312,"startColumn":65,"endColumn":76}}}]},{"ruleId":"68","message":{"text":"Closure does not have a return type, expecting mixed"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":316,"endLine":316,"startColumn":15,"endColumn":62}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int<1, max>"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":325,"endLine":325,"startColumn":67,"endColumn":80}}}]},{"ruleId":"68","message":{"text":"Closure does not have a return type, expecting mixed"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitConsoleOutputProcessor.php"},"region":{"startLine":329,"endLine":329,"startColumn":15,"endColumn":62}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitErrorTestCaseFoundException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitErrorTestCaseFoundException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":41}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":6,"endLine":6,"startColumn":7,"endColumn":21}}}]},{"ruleId":"73","message":{"text":"MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure has an uninitialized property MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure::$testCase, but no constructor"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":13,"endLine":13,"startColumn":17,"endColumn":26}}}]},{"ruleId":"73","message":{"text":"MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure has an uninitialized property MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure::$failureDetail, but no constructor"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":15,"endLine":15,"startColumn":18,"endColumn":32}}}]},{"ruleId":"73","message":{"text":"MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure has an uninitialized property MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure::$logs, but no constructor"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":16,"endLine":16,"startColumn":18,"endColumn":23}}}]},{"ruleId":"87","message":{"text":"Cannot find explicit calls to method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitFailure::getFailureDetails (but did find some potential callers)"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":19,"endLine":19,"startColumn":18,"endColumn":35}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":20,"endLine":20,"startColumn":13,"endColumn":33}}}]},{"ruleId":"356","message":{"text":"Operand of type null|string contains type string, which can be falsy and truthy. This can cause possibly unexpected behavior. Use strict comparison instead."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":21,"endLine":21,"startColumn":8,"endColumn":22}}}]},{"ruleId":"80","message":{"text":"Cannot concatenate with a possibly null null|string"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":25,"endLine":25,"startColumn":14,"endColumn":34}}}]},{"ruleId":"148","message":{"text":"$this->testCase with non-nullable declared type 'string' cannot be assigned nullable type 'null|string'"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":47,"endLine":47,"startColumn":24,"endColumn":35}}}]},{"ruleId":"80","message":{"text":"Cannot concatenate with a possibly null null|string"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":66,"endLine":66,"startColumn":5,"endColumn":25}}}]},{"ruleId":"80","message":{"text":"Cannot concatenate with a possibly null null|string"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":75,"endLine":75,"startColumn":5,"endColumn":16}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitFailure.php"},"region":{"startLine":80,"endLine":80,"startColumn":39,"endColumn":51}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitResultsCachingException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitResultsCachingException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":37}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitSlowTest is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitSlowTest.php"},"region":{"startLine":6,"endLine":6,"startColumn":7,"endColumn":22}}}]},{"ruleId":"87","message":{"text":"Cannot find explicit calls to method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitSlowTest::getDuration (but did find some potential callers)"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitSlowTest.php"},"region":{"startLine":16,"endLine":16,"startColumn":18,"endColumn":29}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitSlowTest::getTest"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitSlowTest.php"},"region":{"startLine":20,"endLine":20,"startColumn":18,"endColumn":25}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitTestFileScanner is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestFileScanner.php"},"region":{"startLine":13,"endLine":13,"startColumn":7,"endColumn":29}}}]},{"ruleId":"182","message":{"text":"MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitTestFileScannerFilter has missing template params when extending RecursiveFilterIterator, expecting 3"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestFileScannerFilter.php"},"region":{"startLine":12,"endLine":12,"startColumn":7,"endColumn":35}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitTestFileScannerFilter is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestFileScannerFilter.php"},"region":{"startLine":12,"endLine":12,"startColumn":7,"endColumn":35}}}]},{"ruleId":"358","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitTestFileScannerFilter::accept should have the \"Override\" attribute"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestFileScannerFilter.php"},"region":{"startLine":39,"endLine":39,"startColumn":2,"endColumn":34}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitTestListProcessor is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestListProcessor.php"},"region":{"startLine":12,"endLine":12,"startColumn":7,"endColumn":31}}}]},{"ruleId":"104","message":{"text":"Argument 1 of SimpleXMLElement::__construct cannot be false, possibly string value expected"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestListProcessor.php"},"region":{"startLine":25,"endLine":25,"startColumn":38,"endColumn":72}}}]},{"ruleId":"356","message":{"text":"Operand of type null|string contains type string, which can be falsy and truthy. This can cause possibly unexpected behavior. Use strict comparison instead."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestListProcessor.php"},"region":{"startLine":27,"endLine":27,"startColumn":8,"endColumn":25}}}]},{"ruleId":"356","message":{"text":"Operand of type null|string contains type string, which can be falsy and truthy. This can cause possibly unexpected behavior. Use strict comparison instead."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestListProcessor.php"},"region":{"startLine":27,"endLine":27,"startColumn":29,"endColumn":39}}}]},{"ruleId":"104","message":{"text":"Argument 1 of json_decode cannot be false, possibly string value expected"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestListProcessor.php"},"region":{"startLine":33,"endLine":33,"startColumn":34,"endColumn":72}}}]},{"ruleId":"79","message":{"text":"Cannot access array value on possibly null variable  of type SimpleXMLElement|null"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitTestListProcessor.php"},"region":{"startLine":55,"endLine":55,"startColumn":13,"endColumn":43}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXml is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":13,"endLine":13,"startColumn":7,"endColumn":17}}}]},{"ruleId":"104","message":{"text":"Argument 1 of SimpleXMLElement::__construct cannot be false, possibly string value expected"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":18,"endLine":18,"startColumn":38,"endColumn":74}}}]},{"ruleId":"79","message":{"text":"Cannot access array value on possibly null variable  of type SimpleXMLElement|null"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":36,"endLine":36,"startColumn":30,"endColumn":58}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXml::addSplitGroups does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":43,"endLine":43,"startColumn":18,"endColumn":32}}}]},{"ruleId":"83","message":{"text":"Cannot call method addAttribute on possibly null value"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":47,"endLine":47,"startColumn":12,"endColumn":24}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int<0, max>"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":47,"endLine":47,"startColumn":51,"endColumn":53}}}]},{"ruleId":"79","message":{"text":"Cannot access array value on possibly null variable  of type SimpleXMLElement|null"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":63,"endLine":63,"startColumn":13,"endColumn":41}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":63,"endLine":63,"startColumn":63,"endColumn":71}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXml::addSpecialCaseTests does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":78,"endLine":78,"startColumn":18,"endColumn":37}}}]},{"ruleId":"83","message":{"text":"Cannot call method addAttribute on possibly null value"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":80,"endLine":80,"startColumn":11,"endColumn":23}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":80,"endLine":80,"startColumn":52,"endColumn":67}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXml::saveToDisk does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":90,"endLine":90,"startColumn":18,"endColumn":28}}}]},{"ruleId":"92","message":{"text":"Argument 1 of DOMDocument::loadXML expects string, but possibly different type bool|string provided"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXml.php"},"region":{"startLine":94,"endLine":94,"startColumn":18,"endColumn":37}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":19,"endLine":19,"startColumn":7,"endColumn":24}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":19,"endLine":19,"startColumn":7,"endColumn":24}}}]},{"ruleId":"104","message":{"text":"Argument 2 of preg_match cannot be false, possibly string value expected"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":101,"endLine":101,"startColumn":49,"endColumn":58}}}]},{"ruleId":"77","message":{"text":"$possibleNamespaces is never referenced or the value is not used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":130,"endLine":130,"startColumn":3,"endColumn":22}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager::fetchResultsCache does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":224,"endLine":224,"startColumn":25,"endColumn":42}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":224,"endLine":224,"startColumn":44,"endColumn":49}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":224,"endLine":224,"startColumn":50,"endColumn":56}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":290,"endLine":290,"startColumn":46,"endColumn":51}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":290,"endLine":290,"startColumn":52,"endColumn":58}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager::listTestsNotice does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":320,"endLine":320,"startColumn":25,"endColumn":40}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":320,"endLine":320,"startColumn":42,"endColumn":47}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":320,"endLine":320,"startColumn":48,"endColumn":54}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":327,"endLine":327,"startColumn":3,"endColumn":14}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":327,"endLine":327,"startColumn":15,"endColumn":18}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":327,"endLine":327,"startColumn":44,"endColumn":51}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager::splitTestsList does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":347,"endLine":347,"startColumn":25,"endColumn":39}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":348,"endLine":348,"startColumn":10,"endColumn":20}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":349,"endLine":349,"startColumn":10,"endColumn":23}}}]},{"ruleId":"134","message":{"text":"Param #3 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":350,"endLine":350,"startColumn":11,"endColumn":21}}}]},{"ruleId":"134","message":{"text":"Param #4 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":351,"endLine":351,"startColumn":10,"endColumn":34}}}]},{"ruleId":"134","message":{"text":"Param #5 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":352,"endLine":352,"startColumn":27,"endColumn":34}}}]},{"ruleId":"134","message":{"text":"Param #6 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":353,"endLine":353,"startColumn":22,"endColumn":31}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":354,"endLine":354,"startColumn":3,"endColumn":15}}}]},{"ruleId":"134","message":{"text":"Param #7 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":354,"endLine":354,"startColumn":16,"endColumn":19}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager::splitTestsListExtensions does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":415,"endLine":415,"startColumn":25,"endColumn":49}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":415,"endLine":415,"startColumn":51,"endColumn":56}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":415,"endLine":415,"startColumn":57,"endColumn":63}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager::splitTestsListDefault does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":443,"endLine":443,"startColumn":25,"endColumn":46}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":443,"endLine":443,"startColumn":48,"endColumn":53}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":443,"endLine":443,"startColumn":54,"endColumn":60}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\PhpUnitXmlManager::splitTestsCustom does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":471,"endLine":471,"startColumn":25,"endColumn":41}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Script\\Event does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":471,"endLine":471,"startColumn":43,"endColumn":48}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/PhpUnitXmlManager.php"},"region":{"startLine":471,"endLine":471,"startColumn":49,"endColumn":55}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":16,"endLine":16,"startColumn":7,"endColumn":25}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":19,"endLine":19,"startColumn":10,"endColumn":22}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor::__construct"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":23,"endLine":23,"startColumn":18,"endColumn":29}}}]},{"ruleId":"134","message":{"text":"Param #1 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":24,"endLine":24,"startColumn":10,"endColumn":28}}}]},{"ruleId":"134","message":{"text":"Param #2 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":25,"endLine":25,"startColumn":19,"endColumn":33}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":26,"endLine":26,"startColumn":3,"endColumn":15}}}]},{"ruleId":"134","message":{"text":"Param #3 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":26,"endLine":26,"startColumn":16,"endColumn":19}}}]},{"ruleId":"134","message":{"text":"Param #4 is never referenced in this method"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":27,"endLine":27,"startColumn":28,"endColumn":52}}}]},{"ruleId":"356","message":{"text":"Operand of type null|string contains type string, which can be falsy and truthy. This can cause possibly unexpected behavior. Use strict comparison instead."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":55,"endLine":55,"startColumn":8,"endColumn":25}}}]},{"ruleId":"4","message":{"text":"Argument 1 of Shellbox\\Command\\UnboxedCommand::environment expects array<array-key, string>, but array{MW_PHPUNIT_SPLIT_GROUP_ID: int} provided"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":62,"endLine":62,"startColumn":27,"endColumn":70}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor::warning does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":68,"endLine":68,"startColumn":19,"endColumn":26}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":70,"endLine":70,"startColumn":4,"endColumn":13}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor::composerLog does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":74,"endLine":74,"startColumn":19,"endColumn":30}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\IO\\IOInterface does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":76,"endLine":76,"startColumn":4,"endColumn":13}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor::consoleLog does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":80,"endLine":80,"startColumn":19,"endColumn":29}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor::runLinearFallback does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":84,"endLine":84,"startColumn":18,"endColumn":35}}}]},{"ruleId":"87","message":{"text":"Cannot find any calls to method MediaWiki\\Composer\\PhpUnitSplitter\\SplitGroupExecutor::runLinearFallback"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":84,"endLine":84,"startColumn":18,"endColumn":35}}}]},{"ruleId":"157","message":{"text":"MediaWiki\\Composer\\ComposerLaunchParallel depends on class or interface mediawiki\\maintenance\\forkcontroller that does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":89,"endLine":89,"startColumn":4,"endColumn":26}}}]},{"ruleId":"157","message":{"text":"MediaWiki\\Composer\\ComposerLaunchParallel depends on class or interface mediawiki\\maintenance\\forkcontroller that does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":90,"endLine":90,"startColumn":4,"endColumn":26}}}]},{"ruleId":"157","message":{"text":"MediaWiki\\Composer\\ComposerLaunchParallel depends on class or interface mediawiki\\maintenance\\forkcontroller that does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":99,"endLine":99,"startColumn":4,"endColumn":26}}}]},{"ruleId":"157","message":{"text":"MediaWiki\\Composer\\ComposerLaunchParallel depends on class or interface mediawiki\\maintenance\\forkcontroller that does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SplitGroupExecutor.php"},"region":{"startLine":100,"endLine":100,"startColumn":4,"endColumn":26}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\SuiteGenerationException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SuiteGenerationException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":31}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SuiteGenerationException.php"},"region":{"startLine":13,"endLine":13,"startColumn":62,"endColumn":70}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\SuiteSplittingException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/SuiteSplittingException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":30}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\TestDescriptor is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestDescriptor.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":21}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\TestListMissingException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestListMissingException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":31}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\TestSuiteBuilder is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":23}}}]},{"ruleId":"272","message":{"text":"The return value for this private method is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":12,"endLine":12,"startColumn":87,"endColumn":90}}}]},{"ruleId":"4","message":{"text":"Argument 2 of usort expects a public static callable, but a non-public callable provided"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":46,"endLine":46,"startColumn":28,"endColumn":66}}}]},{"ruleId":"68","message":{"text":"Closure does not have a return type, expecting mixed"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":67,"endLine":67,"startColumn":5,"endColumn":68}}}]},{"ruleId":"58","message":{"text":"Cannot process ints and floats in strict binary operands mode, please cast explicitly"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":144,"endLine":144,"startColumn":4,"endColumn":81}}}]},{"ruleId":"68","message":{"text":"Closure does not have a return type, expecting mixed"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":156,"endLine":156,"startColumn":37,"endColumn":93}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\PhpUnitSplitter\\TestSuiteBuilder::constructSplitGroups does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":174,"endLine":174,"startColumn":19,"endColumn":39}}}]},{"ruleId":"58","message":{"text":"Cannot concatenate with a int<1, max>"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":184,"endLine":184,"startColumn":87,"endColumn":100}}}]},{"ruleId":"268","message":{"text":"Method array_merge called with named unpacked array array<array-key, array<array-key, mixed>> (array with string keys)"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":187,"endLine":192,"startColumn":8,"endColumn":6}}}]},{"ruleId":"68","message":{"text":"Closure does not have a return type, expecting mixed"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":188,"endLine":188,"startColumn":7,"endColumn":50}}}]},{"ruleId":"153","message":{"text":"Parameter $test has no provided type"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":188,"endLine":188,"startColumn":19,"endColumn":24}}}]},{"ruleId":"68","message":{"text":"Closure does not have a return type, expecting mixed"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/TestSuiteBuilder.php"},"region":{"startLine":196,"endLine":196,"startColumn":5,"endColumn":56}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\PhpUnitSplitter\\UnlocatedTestException is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/PhpUnitSplitter\/UnlocatedTestException.php"},"region":{"startLine":10,"endLine":10,"startColumn":7,"endColumn":29}}}]},{"ruleId":"75","message":{"text":"Class MediaWiki\\Composer\\VersionChecker is never used"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/VersionChecker.php"},"region":{"startLine":30,"endLine":30,"startColumn":7,"endColumn":21}}}]},{"ruleId":"361","message":{"text":"Class MediaWiki\\Composer\\VersionChecker is never extended and is not part of the public API, and thus must be made final."},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/VersionChecker.php"},"region":{"startLine":30,"endLine":30,"startColumn":7,"endColumn":21}}}]},{"ruleId":"50","message":{"text":"Method MediaWiki\\Composer\\VersionChecker::onEvent does not have a return type, expecting void"},"level":"note","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/VersionChecker.php"},"region":{"startLine":31,"endLine":31,"startColumn":25,"endColumn":32}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Composer does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/VersionChecker.php"},"region":{"startLine":32,"endLine":32,"startColumn":14,"endColumn":22}}}]},{"ruleId":"19","message":{"text":"Class, interface or enum named Composer\\Composer does not exist"},"level":"error","locations":[{"physicalLocation":{"artifactLocation":{"uri":"includes\/composer\/VersionChecker.php"},"region":{"startLine":36,"endLine":36,"startColumn":15,"endColumn":23}}}]}]}]}
